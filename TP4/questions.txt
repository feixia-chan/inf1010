1- Pourquoi la classe AttaqueMagique est-elle une classe abstraite ? 

La classe AttaqueMagique sert de classe mère pour des attaques magiques qui ont un type comme poison ou confusion, et qui ont elles mêmes leurs propres spécificités selon le type. 
Il n'a donc pas de sens d'avoir un objet AttaqueMagique pour lequel il n'y a pas de spécificité, c'est pourquoi c'est une classe abstraite.

2- Dans la classe Créature, quelle(s) méthode(s) avez-vous déclarées virtuelles et pourquoi ? 

La méthode attaquer redéfinie dans CreatureMagique a été déclarée virtuelle.
Les dresseurs ont des vecteurs de pointeurs sur les créatures. Lorsqu'on utilse la méthode attaquer(), elle est utilisée sur un pointeur de créature. Or cette créature peut être une créature comme une créature magique !
Il faut donc que la méthode attaquer soit virtuelle.

Cependant on a beaucoup hésité avant de mettre la methode getTypeCreature en non virtuelle: 
	tout d'abord la méthode n'est pas utilisée dans le TP. Il n'y a pas de risque de confusion, ou d'utilisation sur des pointeurs ou références.
	Ensuite, tout comme la méthode getTypeAttaque, on peut utiliser un *this qui permet d'éviter d'avoir la méthode virtuelle (comme on sélectionne l'objet courant).
	Cependant, si on avait utilisé cette méthode telle qu'elle a été écrite, il aurait fallu la mettre en virtuelle.

3- Pourquoi est-il important que les destructeurs de Créature et de CréatureMagique soient virtuels ?

Dans le destructeur de CreatureMagique ont ajoute la destruction de l'attaqueMagique_ que l'on a pas dans le destructeur de Creature.
Or ainsi que dit dans la Q2, une créature peut être en réalité de type CréatureMagique. Si on n'indique pas le destructeur comme virtuel, on peut avoir des fuite mémoires.